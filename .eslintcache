[{"/home/hadiyan/Programing Learn/ReactJS/movies/src/index.js":"1","/home/hadiyan/Programing Learn/ReactJS/movies/src/shared/config.js":"2","/home/hadiyan/Programing Learn/ReactJS/movies/src/store/reducers/auth.js":"3","/home/hadiyan/Programing Learn/ReactJS/movies/src/components/MessagePopUp/index.js":"4","/home/hadiyan/Programing Learn/ReactJS/movies/src/store/actions/actionTypes.js":"5","/home/hadiyan/Programing Learn/ReactJS/movies/src/store/actions/auth.js":"6","/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Layout/Layout.js":"7","/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Animate/index.js":"8","/home/hadiyan/Programing Learn/ReactJS/movies/src/App.js":"9","/home/hadiyan/Programing Learn/ReactJS/movies/src/pages/Login/index.js":"10","/home/hadiyan/Programing Learn/ReactJS/movies/src/reportWebVitals.js":"11","/home/hadiyan/Programing Learn/ReactJS/movies/src/store/actions/index.js":"12","/home/hadiyan/Programing Learn/ReactJS/movies/src/store/actions/message.js":"13","/home/hadiyan/Programing Learn/ReactJS/movies/src/shared/utility.js":"14","/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Auth/Auth.js":"15","/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Auth/AuthForm.js":"16","/home/hadiyan/Programing Learn/ReactJS/movies/src/serviceWorkerRegistration.js":"17","/home/hadiyan/Programing Learn/ReactJS/movies/src/pages/Dashboard/index.js":"18","/home/hadiyan/Programing Learn/ReactJS/movies/src/store/reducers/message.js":"19","/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Layout/layout-jss.js":"20","/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Layout/Sidebar.js":"21","/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Layout/Navbar.js":"22"},{"size":1774,"mtime":1611944130759,"results":"23","hashOfConfig":"24"},{"size":227,"mtime":1611596107876,"results":"25","hashOfConfig":"24"},{"size":1325,"mtime":1611924492164,"results":"26","hashOfConfig":"24"},{"size":2956,"mtime":1611672402775,"results":"27","hashOfConfig":"24"},{"size":325,"mtime":1611924492368,"results":"28","hashOfConfig":"24"},{"size":1719,"mtime":1611924492524,"results":"29","hashOfConfig":"24"},{"size":1804,"mtime":1611951292610,"results":"30","hashOfConfig":"24"},{"size":854,"mtime":1611924493752,"results":"31","hashOfConfig":"24"},{"size":1805,"mtime":1611944350630,"results":"32","hashOfConfig":"24"},{"size":8426,"mtime":1611924488396,"results":"33","hashOfConfig":"24"},{"size":364,"mtime":1611924785751,"results":"34","hashOfConfig":"24"},{"size":162,"mtime":1611924492448,"results":"35","hashOfConfig":"24"},{"size":222,"mtime":1611924492260,"results":"36","hashOfConfig":"24"},{"size":734,"mtime":1611924488664,"results":"37","hashOfConfig":"24"},{"size":629,"mtime":1611924493180,"results":"38","hashOfConfig":"24"},{"size":1322,"mtime":1611924493328,"results":"39","hashOfConfig":"24"},{"size":5064,"mtime":1611924773663,"results":"40","hashOfConfig":"24"},{"size":235,"mtime":1611924488140,"results":"41","hashOfConfig":"24"},{"size":943,"mtime":1611924491884,"results":"42","hashOfConfig":"24"},{"size":2135,"mtime":1611948033166,"results":"43","hashOfConfig":"24"},{"size":3357,"mtime":1611951944183,"results":"44","hashOfConfig":"24"},{"size":1269,"mtime":1611949176364,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fj9e7e",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hadiyan/Programing Learn/ReactJS/movies/src/index.js",[],"/home/hadiyan/Programing Learn/ReactJS/movies/src/shared/config.js",[],["99","100"],"/home/hadiyan/Programing Learn/ReactJS/movies/src/store/reducers/auth.js",["101"],"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    token: localStorage.getItem('key'),\n    error: null,\n    loading: null,\n    authenticated: false,\n}\n\nconst authStart = (state, action) =>\n    updateObject(state, {\n        loading: action.loading,\n    });\n\n\nconst authSuccess = (state, action) =>\n    updateObject(state, {\n        token: action.token,\n        loading: action.loading,\n    });\n\n\nconst authFail = (state, action) =>\n    updateObject(state, {\n        error: action.error,\n        loading: action.loading,\n    });\n\n\nconst authCheck = (state, action) =>\n    updateObject(state, {\n        authenticated: action.authenticated\n    });\n\nconst authLogout = (state, action) =>\n    updateObject({\n        token: action.token,\n    });\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authSuccess(state, action);\n        case actionTypes.AUTH_CHECK: return authCheck(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;",["102","103"],"/home/hadiyan/Programing Learn/ReactJS/movies/src/components/MessagePopUp/index.js",[],"/home/hadiyan/Programing Learn/ReactJS/movies/src/store/actions/actionTypes.js",[],["104","105"],"/home/hadiyan/Programing Learn/ReactJS/movies/src/store/actions/auth.js",["106"],"/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Layout/Layout.js",[],"/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Animate/index.js",[],"/home/hadiyan/Programing Learn/ReactJS/movies/src/App.js",["107"],"/home/hadiyan/Programing Learn/ReactJS/movies/src/pages/Login/index.js",["108"],"import React, { useRef, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport EmailIcon from '@material-ui/icons/EmailOutlined';\nimport VisibilityIcon from '@material-ui/icons/VisibilityOutlined';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport { TextField, Button, CircularProgress, InputAdornment, Icon } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\n//component import\nimport Auth from \"../../components/Auth/Auth\";\nimport AuthForm from \"../../components/Auth/AuthForm\";\nimport { emailRegex } from '../../shared/utility'\nimport * as actions from '../../store/actions';\n\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        display: 'inline-flex',\n        position: 'relative',\n        flexDirection: 'column',\n        verticalAlign: 'top',\n    },\n    buttonWrapper: {\n        position: 'relative',\n    },\n    button: {\n        height: '45px',\n        textTransform: 'capitalize',\n    },\n    progress: {\n        position: 'absolute',\n        marginTop: '5px',\n        left: '50%',\n        marginLeft: -12,\n        color: 'primary'\n    },\n    link: {\n        color: 'inherit',\n        textDecoration: 'none',\n    },\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n    //const [loading, setLoading] = useState(false);\n\n    const { authenticated, loading } = useSelector(({ auth }) => auth);\n\n    // ref\n    const inputRef = useRef();\n\n    const dispatch = useDispatch();\n\n    const onChangeEmail = (emailValue) => {\n        const valid = emailValue.match(emailRegex);\n        setEmail(emailValue);\n        setEmailError(\n            !emailValue.length ? 'Email Cannot Be Null' : !valid ? 'Email not Valid' : ''\n        );\n    }\n\n    const onChangePassword = (passwordValue) => {\n        const valid = passwordValue.length > 6;\n        setPassword(passwordValue);\n        setPasswordError(\n            valid ? '' : 'Minimum password length is 8 character'\n        )\n    }\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault();\n        dispatch(actions.auth(email, password));\n        //dispatch(showMessage({ message: 'button pressed success' , variant: 'success'}));\n    }\n\n    const toogleShowPassword = () => {\n        setShowPassword(!showPassword)\n    }\n\n    const isButtonDisabled = () => {\n        return !email || !password || emailError !== '' || passwordError !== '' || loading;\n    }\n\n    const onSubmitLogoutHandler = (event) => {\n        event.preventDefault();\n        dispatch(actions.showMessage({ message: \"LOGOUT CLICKED\", variant: \"success\" }));\n        dispatch(actions.authLogout());\n        setEmail('');\n        setPassword('');\n    }\n\n    return (\n        <Auth>\n            <AuthForm>\n                <div className=\"text-center my-32\">\n                    <h1>{!authenticated ? 'LOGIN PAGES' : 'YOURE LOGIN'} </h1>\n                </div>\n                <div className=\"w-full\">\n                    <form className=\"flex flex-col justify-center w-full\" onSubmit={onSubmitHandler}>\n                        <div className={clsx(classes.input, 'mb-16')}>\n                            {!authenticated ?\n                                <TextField\n                                    inputRef={inputRef}\n                                    value={email}\n                                    id=\"email\"\n                                    onChange={(e) => { onChangeEmail(e.target.value) }}\n                                    variant=\"outlined\"\n                                    label={\n                                        <div>\n                                            Email <span className=\"text-red\"> *</span>\n                                        </div>\n                                    }\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <Icon>\n                                                    <EmailIcon />\n                                                </Icon>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    helperText={emailError}\n                                    error={emailError !== ''}\n                                /> : null\n                            }\n                        </div>\n\n                        <div className={clsx(classes.input, 'mb-16')}>\n                            {!authenticated ?\n                                <TextField\n                                    id=\"user-password\"\n                                    value={password}\n                                    onChange={(e) => { onChangePassword(e.target.value) }}\n                                    variant=\"outlined\"\n                                    label={\n                                        <div>\n                                            Kata Sandi <span className=\"text-red\"> *</span>\n                                        </div>\n                                    }\n                                    type={showPassword ? 'text' : 'password'}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <Icon\n                                                    onClick={toogleShowPassword}\n                                                    className=\"cursor-pointer\"\n                                                >\n                                                    {!showPassword ?\n                                                        <VisibilityOffIcon /> : <VisibilityIcon />\n                                                    }\n\n                                                </Icon>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    helperText={passwordError}\n                                    error={passwordError !== ''}\n                                    autoComplete=\"on\"\n                                />\n                                : null\n                            }\n                        </div>\n                        <div className={classes.buttonWrapper}>\n                            {!authenticated ?\n                                <Button\n                                    disabled={isButtonDisabled()}\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={clsx(classes.button, 'w-full mx-auto mt-16')}\n                                    type=\"submit\"\n                                >\n                                    {loading ? <CircularProgress\n                                        className={classes.progress}\n                                        size={25}\n                                    /> : 'LOGIN'}\n                                </Button>\n                                :\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={clsx(classes.button, 'w-full mx-auto mt-16')}\n                                    type=\"button\"\n                                    onClick={onSubmitLogoutHandler}\n                                >\n                                    {loading ? <CircularProgress\n                                        className={classes.progress}\n                                        size={25}\n                                    /> : 'Logout'}\n                                </Button>\n                            }\n                        </div>\n                    </form>\n                </div>\n            </AuthForm>\n        </Auth>\n    );\n}\n\nexport default React.memo(Login);",["109","110"],"/home/hadiyan/Programing Learn/ReactJS/movies/src/reportWebVitals.js",[],"/home/hadiyan/Programing Learn/ReactJS/movies/src/store/actions/index.js",["111"],"import { FiberPinRounded } from '@material-ui/icons';\n\nexport { showMessage, hideMessage } from './message';\nexport { auth, authCheck, authLogout } from './auth';","/home/hadiyan/Programing Learn/ReactJS/movies/src/store/actions/message.js",[],["112","113"],"/home/hadiyan/Programing Learn/ReactJS/movies/src/shared/utility.js",[],"/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Auth/Auth.js",[],"/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Auth/AuthForm.js",[],["114","115"],"/home/hadiyan/Programing Learn/ReactJS/movies/src/serviceWorkerRegistration.js",[],"/home/hadiyan/Programing Learn/ReactJS/movies/src/pages/Dashboard/index.js",[],"/home/hadiyan/Programing Learn/ReactJS/movies/src/store/reducers/message.js",[],"/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Layout/layout-jss.js",["116"],"/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Layout/Sidebar.js",[],"/home/hadiyan/Programing Learn/ReactJS/movies/src/components/Layout/Navbar.js",["117","118","119","120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":24,"column":7,"nodeType":"127","messageId":"128","endLine":24,"endColumn":15},{"ruleId":"121","replacedBy":"129"},{"ruleId":"123","replacedBy":"130"},{"ruleId":"121","replacedBy":"131"},{"ruleId":"123","replacedBy":"132"},{"ruleId":"125","severity":1,"message":"133","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":20},{"ruleId":"125","severity":1,"message":"134","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":13},{"ruleId":"125","severity":1,"message":"135","line":1,"column":35,"nodeType":"127","messageId":"128","endLine":1,"endColumn":44},{"ruleId":"121","replacedBy":"136"},{"ruleId":"123","replacedBy":"137"},{"ruleId":"125","severity":1,"message":"138","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"121","replacedBy":"139"},{"ruleId":"123","replacedBy":"140"},{"ruleId":"121","replacedBy":"141"},{"ruleId":"123","replacedBy":"142"},{"ruleId":"125","severity":1,"message":"143","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"144","line":3,"column":5,"nodeType":"127","messageId":"128","endLine":3,"endColumn":16},{"ruleId":"125","severity":1,"message":"145","line":5,"column":5,"nodeType":"127","messageId":"128","endLine":5,"endColumn":14},{"ruleId":"125","severity":1,"message":"146","line":14,"column":10,"nodeType":"127","messageId":"128","endLine":14,"endColumn":20},{"ruleId":"125","severity":1,"message":"147","line":14,"column":22,"nodeType":"127","messageId":"128","endLine":14,"endColumn":30},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'authFail' is assigned a value but never used.","Identifier","unusedVar",["148"],["149"],["148"],["149"],"'defaultApi' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.",["148"],["149"],"'FiberPinRounded' is defined but never used.",["148"],["149"],["148"],["149"],"'React' is defined but never used.","'CssBaseline' is defined but never used.","'Container' is defined but never used.","'makeStyles' is defined but never used.","'useTheme' is defined but never used.","no-global-assign","no-unsafe-negation"]